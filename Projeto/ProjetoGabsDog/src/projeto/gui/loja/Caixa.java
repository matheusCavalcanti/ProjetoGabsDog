package projeto.gui.loja;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projeto.dao.AnimalDAO;
import projeto.dao.AtendimentoDAO;
import projeto.dao.ClienteDAO;
import projeto.dao.HistoricoDAO;
import projeto.modelo.Animal;
import projeto.modelo.Atendimento;
import projeto.modelo.Cliente;
import projeto.modelo.Historico;

/**
 *
 * @author Matheus
 */
public class Caixa extends javax.swing.JFrame {

    /**
     * Creates new form Caixa
     */
    public Caixa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbAnimal = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbPag = new javax.swing.JComboBox<>();
        lblNome = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaServicos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnPagar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnPagarTd = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblIdProc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pendências");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Cliente");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Animal:");

        cbAnimal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbAnimal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAnimalItemStateChanged(evt);
            }
        });
        cbAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnimalActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Forma de pag.");

        cbPag.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbPag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cartão de Crédito" }));

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        lblId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblId)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 442, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbPag, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6)
                    .addComponent(cbPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cbAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        tabelaServicos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descricao", "Valor", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaServicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaServicosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaServicos);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Serviços");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Débito Total:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Por Serviço:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Valor Sel.");

        btnPagar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Pagar Tudo:");

        btnPagarTd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPagarTd.setText("Pagar");
        btnPagarTd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarTdActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 0, 0));

        lblValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblValor.setForeground(new java.awt.Color(255, 0, 0));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("ID:");

        lblIdProc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPagar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPagarTd))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblTotal))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblValor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                                        .addComponent(jLabel10))))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIdProc)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblValor)
                            .addComponent(jLabel10)
                            .addComponent(lblIdProc))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(btnPagar))
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblTotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(btnPagarTd))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnimalActionPerformed
        //Cliente cliente = new ClienteDAO().findById(Integer.parseInt(lblId.getText()));
        //cliente.setId(Integer.parseInt(lblId.getText()));
        
        //cbAnimal.removeAllItems();
        /*List<Animal> animais = new AnimalDAO().findCli(cliente);
        animais.forEach((a) -> {
            cbAnimal.addItem(a.getNome());
        });
        
        ListarProcedimentos();*/
    }//GEN-LAST:event_cbAnimalActionPerformed

    public void ListarProcedimentos() {
        Animal animal = new AnimalDAO().findAni(cbAnimal.getSelectedItem().toString());
        List<Atendimento> atends;
        atends = new AtendimentoDAO().findAtend(animal);
        
        DefaultTableModel model =(DefaultTableModel) tabelaServicos.getModel();
        model.setNumRows(0);
        
        float soma = 0;
        for (Atendimento a : atends) {
            model.addRow(new Object[] { a.getId(), a.getProced().getDescricao(), a.getValor(), a.getQuantidade() });
            //calcula a soma de todos os servicos do cliente
            soma += a.getValor() * a.getQuantidade();
        }
        
        lblTotal.setText(String.valueOf(soma));
        
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Cliente cliente = new ClienteDAO().findById(Integer.parseInt(lblId.getText()));
        //cliente.setId(Integer.parseInt(lblId.getText()));
        
        cbAnimal.removeAllItems();
        List<Animal> animais = new AnimalDAO().findCli(cliente);
        animais.forEach((a) -> {
            cbAnimal.addItem(a.getNome());
        });
    }//GEN-LAST:event_formWindowOpened

    private void cbAnimalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAnimalItemStateChanged
        ListarProcedimentos();
        lblIdProc.setText("");
        lblValor.setText("");
    }//GEN-LAST:event_cbAnimalItemStateChanged

    private void tabelaServicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaServicosMouseClicked
        int x = tabelaServicos.getSelectedRow();
        Object obj = tabelaServicos.getValueAt(x, 0);
        String id = String.valueOf(obj);
        
        Object obj2 = tabelaServicos.getValueAt(x, 2);
        String valor = String.valueOf(obj2);
        
        lblIdProc.setText(id);
        lblValor.setText(valor);
    }//GEN-LAST:event_tabelaServicosMouseClicked

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        if (lblIdProc.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Escolha um Serviço!", "Selecione", JOptionPane.WARNING_MESSAGE);
        } else if( cbPag.getSelectedIndex() == 0 ) {
                    int pgdinheiro = JOptionPane.showConfirmDialog(null, "Deseja Confirmar o Pagamento?", "Pagar no Dinheiro", JOptionPane.YES_NO_OPTION);
                    if (pgdinheiro == 0) {
                                    Atendimento atend = new AtendimentoDAO().findById(Integer.valueOf(lblIdProc.getText()));
                                    Historico historico = new Historico();
                                    historico.setDescricao(atend.getProced().getDescricao());
                                    historico.setIdAnimal(atend.getAnimal().getId_animal());
                                    historico.setQuantidade(atend.getQuantidade());
                                    historico.setValor(atend.getValor());
                                    historico.setData(atend.getData());
                                    historico.setPagamento("Dinheiro");

                                    HistoricoDAO historicoDAO = new HistoricoDAO();
                                    historicoDAO.save(historico);

                                    AtendimentoDAO atendDAO = new AtendimentoDAO();
                                    atendDAO.delete(atend.getId());
                                    }
                    } else { 
                        int pgcartao = JOptionPane.showConfirmDialog(null, "Deseja Confirmar o Pagamento?", "Pagar no Cartão", JOptionPane.YES_NO_OPTION);
                        if (pgcartao == 1) {
                                    Atendimento atend = new AtendimentoDAO().findById(Integer.valueOf(lblIdProc.getText()));
                                    Historico historico = new Historico();
                                    historico.setDescricao(atend.getProced().getDescricao());
                                    historico.setIdAnimal(atend.getAnimal().getId_animal());
                                    historico.setQuantidade(atend.getQuantidade());
                                    historico.setValor(atend.getValor());
                                    historico.setData(atend.getData());
                                    historico.setPagamento("Cartão de Crédito");

                                    HistoricoDAO historicoDAO = new HistoricoDAO();
                                    historicoDAO.save(historico);

                                    AtendimentoDAO atendDAO = new AtendimentoDAO();
                                    atendDAO.delete(atend.getId());
                        }    
                    }
        ListarProcedimentos();
    }//GEN-LAST:event_btnPagarActionPerformed

    private void btnPagarTdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarTdActionPerformed
        if( cbPag.getSelectedIndex() == 0 ) {
                    int pgdinheiro = JOptionPane.showConfirmDialog(null, "Deseja Confirmar o Pagamento?", "Pagar no Dinheiro", JOptionPane.YES_NO_OPTION);
                    if (pgdinheiro == 0) {
                                    Animal animal = new AnimalDAO().findById(Integer.parseInt(lblId.getText()));   
                                    List<Atendimento> atends = new AtendimentoDAO().findAtend(animal);
                                    for (Atendimento a : atends) {
                                        Historico historico = new Historico();
                                        historico.setDescricao(a.getProced().getDescricao());
                                        historico.setIdAnimal(a.getAnimal().getId_animal());
                                        historico.setQuantidade(a.getQuantidade());
                                        historico.setValor(a.getValor());
                                        historico.setData(a.getData());
                                        historico.setPagamento("Dinheiro");

                                        HistoricoDAO historicoDAO = new HistoricoDAO();
                                        historicoDAO.save(historico);

                                        AtendimentoDAO atendDAO = new AtendimentoDAO();
                                        atendDAO.delete(a.getId());
                                    }    
                                }
                    } else { 
                        int pgcartao = JOptionPane.showConfirmDialog(null, "Deseja Confirmar o Pagamento?", "Pagar no Cartão", JOptionPane.YES_NO_OPTION);
                        if (pgcartao == 1) {
                                    Animal animal = new AnimalDAO().findById(Integer.parseInt(lblId.getText()));   
                                    List<Atendimento> atends = new AtendimentoDAO().findAtend(animal);
                                    for (Atendimento a : atends) {
                                        Historico historico = new Historico();
                                        historico.setDescricao(a.getProced().getDescricao());
                                        historico.setIdAnimal(a.getAnimal().getId_animal());
                                        historico.setQuantidade(a.getQuantidade());
                                        historico.setValor(a.getValor());
                                        historico.setData(a.getData());
                                        historico.setPagamento("Cartão de Crédito");

                                        HistoricoDAO historicoDAO = new HistoricoDAO();
                                        historicoDAO.save(historico);

                                        AtendimentoDAO atendDAO = new AtendimentoDAO();
                                        atendDAO.delete(a.getId());
                                    }
                        }    
                    }
        ListarProcedimentos();
    }//GEN-LAST:event_btnPagarTdActionPerformed

    public void recebe(int id) {
        Cliente cliente = new ClienteDAO().findById(id);
        
        lblId.setText(String.valueOf(cliente.getId()));
        lblNome.setText(cliente.getNome());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnPagarTd;
    private javax.swing.JComboBox<String> cbAnimal;
    private javax.swing.JComboBox<String> cbPag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdProc;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblValor;
    private javax.swing.JTable tabelaServicos;
    // End of variables declaration//GEN-END:variables
}
